# 액션의 이름
name: 'Deploy to AWS EC2 Sevice'

# 트리거 (액션이 실행되는 이벤트)
# main 브런치로 git push 이벤트가 발생할 때 실행
on:
  push:
    branches:
      - main

# job 정의
jobs:
  # job의 이름
  gitaction-ec2-deploy:
    # 실행할 환경 -> 우분트에서 진행
    # github내에서 제공 -> 컨테이너 기반
    runs-on: ubuntu-latest

    # job의 단계 정의 => 잡을 세부적으로 쪼개서 표현 steps
    steps:
      # GitHub에서 제공하는 액션을 사용하여 체크아웃
      # 현재 github상에(원격 저장소)저장된 최신 코드를 가져옴
      - name: Repoitory Checkout code, 소스 가져오기 
        uses: actions/checkout@v4

      # pem 파일을 base64 인코딩하여 해당 문자열을 github secret 변수에 저장
      # ec2 서버의 host, user 정보도 github secret 변수에 저장
      # 맥 : base64 -i ~/.ssh/your_key.pem -o a.txt
      # 윈도우(PS) : certutil -encode your_key.pem a.txt
      # 윈도우(PS) : [Convert]::Base64Encode([System.IO.File]::ReadAllBytes("your_key.pem")) > a.txt
      # pem 파일은 깃허브상 리눅스에 파일 생성 => ec2 접속을 위해
      # 키값을 디코딩하여 리눅스상 현재 위치에 생성, 퍼미션 조정
      - name: Create SSH key file - pem 파일 생성
        run: |
          echo "${{ secrets.EC2_KEY }}" | base64 --decode > my.pem
          chmod 600 my.pem
          cat my.pem
          ls -al

      # ec2 리소스 초기화 (나중에 추가)
      - name: 뒷정리
        run: |
          ssh -i my.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # 프로세스 종료(서버 종료)
            pkill -f "python app.py" || true

            # 디렉토리 삭제
            rm -rf ~/app

            # 가상환경
            # rm -rf ~/venv 
          EOF

      # github상 리눅스에 위치한 소스 -> ec2 서버로 배포
      - name: Deploy to EC2 instance - ec2 서버로 배포
        # scp  : secure copy, ssh를 통해 파일을 복사하는 명령어
        # -o StrictHostKeyChecking=no : 경고창 없이 바로 진입(신뢰...)
        # -i ./my.pem : pem 파일을 지정하여 ssh 접속
        # -r : 디렉토리(하위포함) 전체를 복사  
        # ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/app : 원격지 경로
        # . : 현재 디렉토리 (대상) 
        # : 원격지 특정 위치
        run: |          
          scp -i my.pem -o StrictHostKeyChecking=no -r . ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/app

      # EC2 리눅스 서버 세팅
      - name: EC2 환경 세팅및 구동
        run: |
          ssh -i my.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # 작업 디렉토리 이동
            cd ~/app
            # 리눅스 업데이트
            sudo apt update -y
            # 필요 패키지 설치
            sudo apt install -y python3-pip python3-venv

            # 가상환경 생성
            python3 -m venv venv
            # 가상환경 활성화
            source venv/bin/activate

            # 의존성 설치
            pip install -r requirements.txt

            # 백엔드 서버 실행
            nohup venv/bin/python app.py > app.log 2>&1 &
            
          EOF
          
